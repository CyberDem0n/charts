apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "patroni.fullname" . }}
  labels:
    app: {{ template "patroni.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "patroni.fullname" . }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "patroni.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: spilo
          image: "{{ .Values.spilo.image }}:{{ .Values.spilo.version }}"
          env:
            - name: PGPASSWORD_SUPERUSER
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: password-superuser
            - name: PGPASSWORD_ADMIN
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: password-admin
            - name: PGPASSWORD_STANDBY
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: password-standby
        {{ if .Values.etcd.enable }}
          {{ if .Values.etcd.deployChart }}
            - name: ETCD_DISCOVERY_DOMAIN
              value: {{ default (include "patroni.etcd.fullname" .) .Values.etcd.discovery }}
          {{ else }}
            - name: ETCD_HOST
              value: {{ .Values.etcd.host | quote }}
          {{ end }}
        {{ else if .Values.zookeeper.enable }}
          {{ if .Values.zookeeper.deployChart }}
            - name: ZOOKEEPER_HOSTS
              value: {{ (printf "'hs-zk-%s:2181'" .Release.Name | trunc 63) }}
          {{ else }}
            - name: ZOOKEEPER_HOSTS
              value: {{ .Values.zookeeper.hosts | quote }}
          {{ end }}
        {{ end }}
            - name: SCOPE
              value: {{ template "patroni.fullname" . }}
        {{ if .Values.walE.enable }}
            - name: USE_WALE
              value: {{ .Values.walE.enable | quote }}
          {{ if .Values.walE.scheduleCronJob }}
            - name: BACKUP_SCHEDULE
              value: {{ .Values.walE.scheduleCronJob | quote }}
          {{ end }}
          {{ if .Values.walE.retainBackups }}
            - name: BACKUP_NUM_TO_RETAIN
              value: {{ .Values.walE.retainBackups | quote }}
          {{ end }}
          {{ if .Values.walE.s3Bucket }}
            - name: WAL_S3_BUCKET
              value: {{ .Values.walE.s3Bucket | quote }}
          {{ else if .Values.walE.gcsBucket }}
            - name: WAL_GCS_BUCKET
              value: {{ .Values.walE.gcsBucket | quote }}
            {{ if .Values.walE.kubernetesSecret }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/credentials/{{ .Values.walE.kubernetesSecret }}.json"
            {{ end }}
          {{ end }}
          {{ if .Values.walE.backupThresholdMegabytes }}
            - name: WALE_BACKUP_THRESHOLD_MEGABYTES
              value: {{ .Values.walE.backupThresholdMegabytes | quote }}
          {{ end }}
          {{ if .Values.walE.backupThresholdPercentage }}
            - name: WALE_BACKUP_THRESHOLD_PERCENTAGE
              value: {{ .Values.walE.backupThresholdPercentage | quote }}
          {{ end }}
        {{ else }}
            - name: USE_WALE
              value: ""
        {{ end }}
            - name: PGROOT
              value: "{{ .Values.persistentVolume.mountPath }}/pgroot"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8008
            - containerPort: 5432
          resources:
  {{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: datadir
              mountPath: "{{ .Values.persistentVolume.mountPath }}"
              subPath: "{{ .Values.persistentVolume.subPath }}"
            - mountPath: /etc/patroni
              name: patroni-config
              readOnly: true
          {{ if and .Values.walE.enable .Values.walE.kubernetesSecret }}
            - name: {{ .Values.walE.kubernetesSecret }}
              mountPath: /etc/credentials
              readOnly: true
        {{ end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{ end }}
    {{- if eq .Values.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "patroni.name" . }}"
                  release: "{{ .Release.Name }}"
    {{- else if eq .Values.podAntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: "{{ template "patroni.name" . }}"
                    release: "{{ .Release.Name }}"
    {{- end }}
      volumes:
        - name: patroni-config
          secret:
            secretName: {{ template "patroni.fullname" . }}
      {{ if and .Values.walE.enable .Values.walE.kubernetesSecret }}
        - name: {{ .Values.walE.kubernetesSecret }}
          secret:
            secretName: {{ .Values.walE.kubernetesSecret }}
      {{ end }}
{{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      {{- if .Values.persistentVolume.annotations }}
        annotations:
{{ toYaml .Values.persistentVolume.annotations | indent 10 }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size | quote }}
    {{- if .Values.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistentVolume.storageClass }}"
      {{- end }}
    {{- end }}
{{- else }}
        - name: datadir
          emptyDir: {}
{{- end }}
